# mkcert -cert-file=pklw3.local+1.pem -key-file=pklw3.local+1-key.pem pklw3.local www.pklw3.local
# .env - DOCKER_PREFIX=pklw3
#
# if by php serve
#docker-compose exec pklw3-app php artisan serve --port=8000 --host=0.0.0.0

# sudo chown -R $USER:$USER ./

version: "3"
services:

  #php
  app:
    build:
      context: .
      dockerfile: ./docker/php-fpm/Dockerfile
    image: digitalocean.com/php
    container_name: "${DOCKER_PREFIX}-app"
    restart: always
    tty: true
    depends_on:
      - pgsql
      #- redis
    environment:
      SERVICE_NAME: app
      SERVICE_TAGS: dev
      #REDIS_HOST: redis
    working_dir: /var/www
    user: "1000:1000"
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    volumes:
      - ./:/var/www
      - ./docker/php-fpm/local.ini:/usr/local/etc/php/conf.d/php.ini
    networks:
      - app-network
    #  - smartsell

  #postgres
  pgsql:
    image: postgres:16-alpine
    container_name: "${DOCKER_PREFIX}-db"
    restart: always
    environment:
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_DATABASE}
    volumes:
      - ./docker/postgres:/var/lib/postgresql/data
    ports:
      - "${DOCKER_DB_PORT:-5432}:5432"
    networks:
      - app-network
    healthcheck:
      test: [ "CMD", "pg_isready", "-q", "-d", "${DB_DATABASE}", "-U", "${DB_USERNAME}" ]
      retries: 3
      timeout: 5s

  # redis
  #redis:
  #  image: redis:6.2.0-alpine3.13
  #  container_name: "${DOCKER_PREFIX}-redis"
  #  restart: always
  #  ports:
  #    - "${FORWARD_REDIS_PORT:-6379}:6379"
  #  networks:
  #    - app-network
  #  healthcheck:
  #    test: [ "CMD", "redis-cli", "ping" ]
  #    retries: 3
  #    timeout: 5s

  #nginx
  webserver:
    image: nginx:1.19.7-alpine
    container_name: "${DOCKER_PREFIX}-server"
    restart: always
    tty: true
    depends_on:
      - app
    ports:
      - "${DOCKER_HOST_PORT}:80"
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    volumes:
      - ./:/var/www
      - ./docker/nginx/local.conf:/etc/nginx/conf.d/default.conf
      #- ./docker/nginx/ssl.conf:/etc/nginx/conf.d/default.conf
      - ${DOCKER_SSL_DIRECTORY}:/etc/nginx/ssl
    networks:
      - app-network
    #  - smartsell

#networks
networks:
  app-network:
    driver: bridge
  #smartsell:
  #  external: true
#volumes
volumes:
  postgres:
    driver: local
